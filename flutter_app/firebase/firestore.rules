rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{document} {
      allow create: if request.auth.uid == document;
      allow read: if true;
      allow write: if request.auth.uid == document;
      allow delete: if false;
    }

    match /voices/{document} {
      allow create: if request.resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /videos/{document} {
      allow create: if request.resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /voices/{parent}/voiceAudios/{document} {
      allow create: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /courses/{document} {
      allow create: if request.resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /voices/{parent}/generations/{document} {
      allow create: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if get(/databases/$(database)/documents/voices/$(parent)).data.user_id == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /videos/{parent}/translations/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /{path=**}/translations/{document} {
      allow read: if true;
    }

  }
}
